services:
  # --- 新增 PostgreSQL 服務 ---
  postgres:
    image: ankane/pgvector:v0.5.1
    container_name: healthbot_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-senior_health}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-P@ssw0rd} # 在 .env 中設定
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    # --- 新增結束 ---
  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: milvus-etcd
    volumes:
    - etcd_data:/etcd
    command:
    - /usr/local/bin/etcd
    - --name=etcd
    - --data-dir=/etcd
    - --listen-client-urls=http://0.0.0.0:2379
    - --advertise-client-urls=http://etcd:2379
    - --listen-peer-urls=http://0.0.0.0:2380
    - --initial-advertise-peer-urls=http://etcd:2380
    - --initial-cluster=etcd=http://etcd:2380
    - --initial-cluster-state=new
    - --initial-cluster-token=milvus-etcd-cluster
    depends_on:
    - redis
    environment:
      REDIS_URL: redis://redis:6379/0
  minio:
    image: minio/minio:RELEASE.2023-07-21T21-12-44Z
    container_name: milvus-minio
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: server /data --console-address ":9001"
    volumes:
    - minio_data:/data
    ports:
    - 9000:9000
    - 9001:9001
  pulsar:
    image: apachepulsar/pulsar:2.10.0
    container_name: milvus-pulsar
    command: bin/pulsar standalone
    ports:
    - 6650:6650
    - 8080:8080
  milvus:
    image: milvusdb/milvus:v2.5.12
    container_name: milvus
    depends_on:
    - etcd
    - minio
    - pulsar
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      PULSAR_ADDRESS: pulsar://pulsar:6650
      MILVUS_DEPLOY_MODE: standalone
    ports:
    - 19530:19530
    - 9091:9091
    volumes:
    - milvus_data:/var/lib/milvus
    command:
    - milvus
    - run
    - standalone
  redis:
    image: redis:7-alpine
    command:
    - redis-server
    - --appendonly
    - 'yes'
    - --appendfsync
    - everysec
    ports:
    - 6379:6379
    volumes:
    - redis-data:/data
    healthcheck:
      test:
      - CMD
      - redis-cli
      - ping
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped
volumes:
  postgres_data: {}
  etcd_data: null
  minio_data: null
  milvus_data: null
  redis-data: {}
